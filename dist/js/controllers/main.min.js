"use strict";var MainController=angular.module("MainController",[]);MainController.controller("MainCtrl",["$filter","$q","$scope","CouchDB",function(e,t,n,s){n.show={testsComplete:!1},n.this_couchDB={database:"test_angular_couchdb",designDocument:"design",host:"localhost",port:"5984"},n.tests={DELETE:{run:!0,results:null,data:null},GETbyDocId:{run:!0,results:null,data:null},GETbyKey:{run:!0,results:null,data:null},POST:{run:!0,results:null,data:null},PUT:{run:!0,results:null,data:null},UPDATE:{run:!0,results:null,data:null},UUID:{run:!0,results:null,data:null,count:5}},n._addDesignDoc=function(){var e=t.defer(),n={_id:"_design/test",language:"javascript",views:{byNumber:{map:'function(doc) {\nif ( doc.type == "Dead President" ) {\n    emit(doc.presidentNumber, null);\n  }\n}'}}},r=s.save({data:n});return r.then(function(t){console.log("DESIGN DOC / Added document:",t.data),e.resolve(!0)},function(e){throw new Error("DESIGN DOC ADD failed:",e)}),e.promise},n._main=function(){var e=s.init(n.this_couchDB,!0);e.then(function(){console.log("DATABASE / Add database:",n.this_couchDB.database),n._addDesignDoc()})},n._now=function(){return e("date")(new Date,"yyyy/MM/dd HH:mm,sss")},n._runTests=function(e){var t=n.UUID(e);t.then(function(){return n.Post(e)}).then(function(){return n.Put(e)}).then(function(){return n.GetByDocId(e)}).then(function(){return n.GetByKey(e)}).then(function(){return n.Update(e)}).then(function(){return n.Delete(e)}).then(function(){n.show.testsComplete=!0})},n.Delete=function(){var e,r,a,o,d=t.defer();return n.tests.DELETE.run?(e=s.read({docId:"05_Monroe_James"}),e.then(function(e){r=e.data._id,a=e.data._rev,o=s.remove({docId:r,revisionId:a}),o.then(function(e){console.log("DELETE / Removed document:",e.data),n.tests.DELETE.data=e.data.id,n.tests.DELETE.results=!0,d.resolve(!0)},function(e){throw new Error("DELETE test failed:",e)})})):d.resolve(!1),d.promise},n.GetByDocId=function(){var e=t.defer();if(n.tests.GETbyDocId.run){var r=s.read({docId:n.tests.UUID.data.slice(0,1)});r.then(function(t){console.log("GET / One document read by ID only:",t.data);var r=s.read({docId:t.data._id,revisionId:t.data._rev});r.then(function(t){console.log("GET / One document read by ID & Revision number:",t.data),n.tests.GETbyDocId.results=!0,n.tests.GETbyDocId.data={id:t.data._id,rev:t.data._rev},e.resolve(!0)}),e.resolve(!0)})}else e.resolve(!1);return e.promise},n.GetByKey=function(){var e,r=t.defer(),a=[],o={};if(n.tests.GETbyKey.run){n.tests.GETbyKey.data="",o.designDocument="test",o.key="3",o.view="byNumber",a.push(s.read(o)),o.key=null,o.startKey="4",a.push(s.read(o)),o.startKey="2",o.endKey="4",a.push(s.read(o));var e=t.all(a);e.then(function(e){_.each(e,function(e){console.log("GET / Read document:",e.data.rows),_.each(e.data.rows,function(e){n.tests.GETbyKey.data=n.tests.GETbyKey.data+" "+(e.key+":"+e.id)}),n.tests.GETbyKey.data=n.tests.GETbyKey.data+"|"}),n.tests.GETbyKey.results=!0,r.resolve(!0)},function(e){throw new Error("GETBYKEY test failed:",e)})}else r.resolve(!1);return r.promise},n.Post=function(){var e=t.defer();if(n.tests.POST.run){var r=s.save({data:{type:"Dead President",name:{first:"George",last:"Washington"},presidentNumber:"1",created:n._now()}});r.then(function(t){console.log("POST / Stored new document:",t.data),n.tests.POST.data=t.data.id,n.tests.POST.results=!0,e.resolve(!0)},function(e){throw new Error("POST test failed:",e)})}else e.resolve(!1);return e.promise},n.Put=function(){var e=t.defer();if(n.tests.PUT.run){var r,a=[{first:"jon",last:"Adams",presidentNumber:"2"},{first:"Thomas",last:"Jefferson",presidentNumber:"3"},{first:"James",last:"Madison",presidentNumber:"4"},{first:"James",last:"Monroe",presidentNumber:"5"}],o=[];n.tests.PUT.data="";var d=n.tests.UUID.data.slice(0,3);d.push("05_Monroe_James"),_.each(d,function(e,t){var r={};r.type="Dead President",r.name={},r.name.first=a[t].first,r.name.last=a[t].last,r.presidentNumber=a[t].presidentNumber,r.created=n._now();var d={};d.docId=e,d.data=r,o.push(s.save(d))});var r=t.all(o);r.then(function(t){_.each(t,function(e){console.log("PUT / Stored new document:",e.data),n.tests.PUT.data=n.tests.PUT.data+", "+e.data.id}),n.tests.PUT.results=!0,e.resolve(!0)},function(e){throw new Error("PUT test failed:",e)})}else e.resolve(!1);return e.promise},n.Update=function(){var e,r,a,o,d,u=t.defer();return n.tests.UPDATE.run?(r=s.read({docId:n.tests.UUID.data.slice(0,1)}),r.then(function(t){e=t.data,a=t.data._id,o=t.data._rev,e.name.first="John",e.modified=n._now(),d=s.save({docId:a,revisionId:o,data:e}),d.then(function(e){console.log("UPDATE / Modified document:",e.data),n.tests.UPDATE.data=e.data.id,n.tests.UPDATE.results=!0,u.resolve(!0)},function(e){throw new Error("UPDATE test failed:",e)})})):u.resolve(!1),u.promise},n.UUID=function(e){var r=t.defer();if(n.tests.UUID.run){var a=s.uuid(e.UUID.count);a.then(function(e){console.log("UUIDs:",e.data),n.tests.UUID.data=e.data.uuids,n.tests.UUID.results=!0,r.resolve(!0)})}else r.resolve(!1);return r.promise},n._main()}]);